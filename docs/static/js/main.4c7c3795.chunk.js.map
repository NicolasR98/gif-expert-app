{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","value","preventDefault","trim","length","cats","type","onChange","key","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC7B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACC,uBAAMC,SAZc,SAACC,GAGrB,IALkBC,EAGlBD,EAAEE,iBAEmBL,EAAWM,OAAOC,OAAS,IAL9BH,EAQPJ,EARiBF,GAAc,SAACU,GAAD,OAAWJ,GAAX,mBAAqBI,OAS9DP,EAAc,MAKf,UACC,8CACA,uBAAOQ,KAAK,OAAOL,MAAOJ,EAAYU,SAlBd,SAAC,GAAD,IAAoBC,EAApB,EAAGC,OAAUR,MAAb,OAAgCH,EAAcU,U,+BCN5DE,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UACrDH,GAFqB,+DAIHI,MAAMF,GAJH,cAIhBG,EAJgB,gBAKCA,EAAKC,OALN,uBAKdC,EALc,EAKdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXd,kBAcfM,GAde,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBH,EAAqB,EAArBA,MAAOD,EAAc,EAAdA,GAAIT,EAAU,EAAVA,IACxC,OACC,sBAAKc,UAAU,+CAAf,UACC,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,MAF8DD,ICAxDQ,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACzB,ECF2B,SAACA,GAC5B,MAA0Bf,mBAAS,CAClCsB,KAAM,GACNa,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACTxB,EAAQC,GAAUwB,MAAK,SAAChB,GACvBc,EAAS,CACRf,KAAMC,EACNY,SAAS,SAGT,CAACpB,IAEGqB,EDbyBI,CAAazB,GAA/BQ,EAAd,EAAQD,KAAYa,EAApB,EAAoBA,QAEpB,OACC,gCACC,6BAAKpB,IACJoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,oBAAIA,UAAU,iBAAd,SACER,EAAKC,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aETde,EAAe,WAC3B,MAAoCzC,mBAAS,CAAC,qBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACC,qCACC,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACE2C,EAAWlB,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCTnB4B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.4c7c3795.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst handleInputChange = ({ target: { value: key } }) => setInputValue(key);\n\n\tconst handleAdd = (value) => setCategories((cats) => [value, ...cats]);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst isValidInput = inputValue.trim().length > 2;\n\n\t\tif (isValidInput) {\n\t\t\thandleAdd(inputValue);\n\t\t\tsetInputValue('');\n\t\t}\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<h2>Add Category</h2>\n\t\t\t<input type=\"text\" value={inputValue} onChange={handleInputChange} />\n\t\t</form>\n\t);\n};\n\nAddCategory.propTypes = {\n\tsetCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n\t\tcategory\n\t)}&limit=10&api_key=nKqbfWjdlPnOusoIhA9I5Fbs0q4YBvID`;\n\tconst resp = await fetch(url);\n\tconst { data } = await resp.json();\n\n\tconst gifs = data.map((gif) => {\n\t\treturn {\n\t\t\tid: gif.id,\n\t\t\ttitle: gif.title,\n\t\t\turl: gif.images?.downsized_medium.url,\n\t\t};\n\t});\n\treturn gifs;\n};\n","import React from 'react';\n\nexport const GifGridItem = ({ title, id, url }) => {\n\treturn (\n\t\t<div className=\"card  animate__animated animate__backInRight\" key={id}>\n\t\t\t<img src={url} alt={title} />\n\t\t\t<p>{title}</p>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\tconst { data: gifs, loading } = useFetchGifs(category);\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>{category}</h3>\n\t\t\t{loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n\t\t\t<ol className=\"card-container\">\n\t\t\t\t{gifs.map((gif) => (\n\t\t\t\t\t<GifGridItem key={gif.id} {...gif} />\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</div>\n\t);\n};\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n\tconst [state, setState] = useState({\n\t\tdata: [],\n\t\tloading: true,\n\t});\n\n\tuseEffect(() => {\n\t\tgetGifs(category).then((gifs) => {\n\t\t\tsetState({\n\t\t\t\tdata: gifs,\n\t\t\t\tloading: false,\n\t\t\t});\n\t\t});\n\t}, [category]);\n\n\treturn state;\n};\n","import React, { useState } from 'react';\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid';\n\nexport const GifExpertApp = () => {\n\tconst [categories, setCategories] = useState(['Age of empires 2']);\n\n\treturn (\n\t\t<>\n\t\t\t<h2>GifExpertApp</h2>\n\t\t\t<hr />\n\t\t\t<AddCategory setCategories={setCategories} />\n\t\t\t<ol>\n\t\t\t\t{categories.map((category) => (\n\t\t\t\t\t<GifGrid key={category} category={category} />\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</>\n\t);\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./components/GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}